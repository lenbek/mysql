-- =============================================================================================================================
-- Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»
-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
-- =============================================================================================================================
update users 
   set created_at = now(),
       updated_at = now();
 
-- =============================================================================================================================
-- 2. Таблица users была неудачно спроектирована. 
-- Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. 
-- Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.  
-- =============================================================================================================================
use  sample;
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Имя покупателя',
  birthday_at DATE COMMENT 'Дата рождения',
  created_at VARCHAR(20),
  updated_at VARCHAR(20)
) COMMENT = 'Покупатели';
INSERT INTO users (name, birthday_at, created_at, updated_at) VALUES
  ('Геннадий',  '1990-10-05', '20.03.2011 8:10', '21.10.2017 12:10'),
  ('Наталья', 	'1984-11-12', '20.04.2011 8:10', '22.10.2017 15:10'),
  ('Александр', '1985-05-20', '20.05.2012 8:10', '23.10.2017 9:10'),
  ('Сергей', 	'1988-02-14', '20.06.2012 8:10', '24.10.2017 10:10'),
  ('Иван', 		'1991-02-28', '20.07.2017 8:10', '25.10.2017 23:30'),
  ('Мария', 	'1992-02-29', '20.08.2017 8:10', '29.02.2020 0:10')
 ;
 
update users u 
   set u.created_at = concat(substr(u.created_at,7,4),'-',substr(u.created_at,4,2),'-', substr(u.created_at,1,2), substr(u.created_at,11)),
       u.updated_at = str_to_date(u.updated_at, '%d.%m.%Y %k:%i')
  ;
 
ALTER TABLE users MODIFY COLUMN created_at DATETIME;
ALTER TABLE users MODIFY COLUMN updated_at DATETIME;
  
select * from users u ;
-- =============================================================================================================================
-- 3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 
--    0, если товар закончился и выше нуля, если на складе имеются запасы.
--    Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. 
--    Однако нулевые запасы должны выводиться в конце, после всех записей. 
-- =============================================================================================================================
DROP TABLE IF EXISTS storehouses_products;
CREATE TABLE storehouses_products (
  id SERIAL PRIMARY KEY,
  storehouse_id INT UNSIGNED,
  product_id INT UNSIGNED,
  value INT UNSIGNED COMMENT 'Запас товарной позиции на складе',
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT = 'Запасы на складе'; 

insert into storehouses_products (storehouse_id, product_id, value)
values (1, 1, 0),
	   (1, 2, 10),
	   (1, 3, 200),
	   (1, 4, 555),
	   (2, 1, 0),
	   (2, 2, 0),
	   (2, 3, 1),
	   (2, 4, 7890) 
;

SELECT *
  from storehouses_products
 order by value = 0,
 		  value,
 		  product_id,
 		  storehouse_id
;



-- =============================================================================================================================
-- 4. Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. 
--    Месяцы заданы в виде списка английских названий (may, august)
-- =============================================================================================================================
select u.* 
  from users u 
 where lower(MONTHNAME( u.birthday_at)) in ('may', 'august')
  ;
 
-- =============================================================================================================================
-- 5. Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); 
--    Отсортируйте записи в порядке, заданном в списке IN.
-- =============================================================================================================================
CREATE TABLE catalogs (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) COMMENT 'Название раздела',
  UNIQUE unique_name(name(10))
) COMMENT = 'Разделы интернет-магазина';

INSERT INTO catalogs VALUES
  (NULL, 'Процессоры'),
  (NULL, 'Материнские платы'),
  (NULL, 'Видеокарты'),
  (NULL, 'Жесткие диски'),
  (NULL, 'Оперативная память');
 
SELECT * 
  FROM catalogs 
 WHERE id IN (5, 1, 2)
 order by case when id = 5 then 0
 			   else id
 		   end
 ;	  

